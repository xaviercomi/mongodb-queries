db.restaurants.find();
db.restaurants.find( {}, {restaurant_id:1,name:1,address:1,borough:1,cuisine:1} );
db.restaurants.find( {}, {restaurant_id:1,name:1,address:1,borough:1,cuisine:1,_id:0} );
db.restaurants.find( {address: {zipcode: 1}}, {restaurant_id:1,name:1,borough:1,cuisine:1,_id:0} );
db.restaurants.find( {borough: { $eq: 'Bronx' }},{});
db.restaurants.find( {borough: { $eq: 'Bronx' }}, {}).limit(5).pretty();
db.restaurants.find( {borough: { $eq: 'Bronx' }}, {}).skip().limit(5).pretty();
db.restaurants.find( {grades: { $elemMatch: { score: { $gt: 90  }}}}, { name: 1, _id: 0 } ); 
db.restaurants.find( {grades: { $elemMatch: { score: { $gt: 80, $lt: 100 } } } }, { name: 1, _id: 0}  ); 
db.restaurants.find( {'address.coord.0': { $lt: -95.754168 } } , { 'name': 1, '_id': 0 } );
db.restaurants.find( {'cuisine': {$ne: 'American '},'address.coord.1': {$lt: 65.754168, }, 'grades.score': { $lt: 70 } }, {'name': 1, '_id': 0,} );
db.restaurants.find( {'cuisine': {$ne: 'American '}, 'grades.score':{ $lt: 70}, 'address.coord.0': {$lt: -65.754168} }, {'name': 1, '_id': 0} );
db.restaurants.find( {'cuisine': {$ne: 'American '}, 'grades.grade': {$eq: 'A'}, 'borough': {$ne: 'Brooklyn'}}, {'cuisine': 1, 'name': 1, '_id': 0} ).sort({'cuisine': -1});
db.restaurants.find( {'name':/^Wil/}, {'restaurant_id': 1, 'name': 1, 'borough': 1, 'cuisine': 1, '_id': 0} );
db.restaurants.find( {'name':/ces$/}, {'restaurant_id': 1, 'name': 1, 'borough': 1, 'cuisine': 1, '_id': 0} );
db.restaurants.find( {'name':/Reg/}, {'restaurant_id': 1, 'name': 1, 'borough': 1, 'cuisine': 1, '_id': 0} );
db.restaurants.find( {'borough': {$eq: 'Bronx'}, 'cuisine': {$eq: 'American '}, 'cuisine': {$eq: 'Chinese'} }, {'cuisine': 1,'name': 1, '_id': 0} );
db.restaurants.find( {'borough': {$in: ['Staten Island','Queens','Bronx','Brooklyn']}}, {'_id':0, 'restaurant_id':1, 'borough':1, 'cuisine':1} );
db.restaurants.find( {'borough': {$nin: ['Staten Island','Queens','Bronx','Brooklyn']}}, {'_id':0, 'restaurant_id':1, 'borough':1, 'cuisine':1} );
db.restaurants.find( {'grades.score': {$eq : 10}}, {'restaurant_id': 1, 'name': 1, 'borough': 1, 'cuisine': 1, 'grades.score': 1} ).pretty();
db.restaurants.find( {$or: [ {'cuisine': {$eq: 'Seafood', $ne: 'American ', $ne: 'Chinese'} }, {'name':/^Wil/} ]}, {'restaurant_id': 1, 'borough': 1, 'cuisine': 1, 'name': 1});
db.restaurants.find( {'grades': {$elemMatch: {'grade': {$eq:'A'}, 'score': {$eq:11}, 'date': {$eq:ISODate('2014-08-11T00:00:00Z')}} }}, {'restaurant_id': 1, 'name': 1, 'grades': 1});
db.restaurants.find( {'grades.1': {$elemMatch: {'grade': {$eq:'A'}, 'score': {$eq:9}, 'date': {$eq:ISODate('2014-08-11T00:00:00Z')}} }}, {'restaurant_id': 1, 'name': 1, 'grades': 1});
db.restaurants.find( {'address.coord.1': {$gt: 42, $lt: 52}}, {'restaurant_id': 1, 'name': 1, 'address': 1,} );
db.restaurants.find( {}, {'name': 1, 'address': 1, 'borough': 1}).sort({'name': 1}, {'address': 1}, {'borough': 1});
db.restaurants.find( {}, {'name': 1, 'address': 1, 'borough': 1}).sort({'name': -1}, {'address': -1}, {'borough': -1});
db.restaurants.find( {}, {'cuisine': 1, 'borough': 1}).sort({'cuisine': 1}, {'borough': -1});
db.restaurants.find( {'address.street': {$exists: false}}, {'name': 1, 'address.street': 1});
